{"version":3,"sources":["Nav/Nav.js","TweetForm/TweetForm.js","modal/flashcard.js","TweetList/TweetList.js","banner/Banner.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","d","for","xmlns","width","height","viewBox","type","id","councils","Camden","Croydon","Hackney","Islington","Lambeth","Lewisham","Westminster","TweetForm","useState","date","incident","council","urgency","postcode","form","setForm","setPostcode","toggle","setToggle","handleChange","e","preventDefault","target","name","value","diffPostcode","selection","newVal","result","i","Object","entries","key","councilhandle","onSubmit","fetch","then","res","json","placeholder","onChange","htmlFor","addCouncil","disabled","onClick","setTimeout","window","location","reload","icon","faTwitter","dayjs","require","relativeTime","extend","Flashcard","tweet","modalIsOpen","setIsOpen","removeURL","text","replace","entities","media","map","image","index","alt","src","media_url","user","profile_image_url","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","contentLabel","created_at","fromNow","TweetList","tweets","setTweets","useEffect","base_url","filter","el","Banner","to","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.570b0d93.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Nav() {\n  return (\n    <div className=\"mt-4 pb-0\">\n      <div className=\"lg:px-16 px-6 bg-white flex flex-wrap items-center lg:py-0 py-2\">\n        <div className=\"flex-1 flex justify-between items-center\">\n          <a href=\"ok\">\n            <path d=\"M15.922 35.798c-.946 0-1.852-.228-2.549-.638l-10.825-6.379c-1.428-.843-2.549-2.82-2.549-4.501v-12.762c0-1.681 1.12-3.663 2.549-4.501l10.825-6.379c.696-.41 1.602-.638 2.549-.638.946 0 1.852.228 2.549.638l10.825 6.379c1.428.843 2.549 2.82 2.549 4.501v12.762c0 1.681-1.12 3.663-2.549 4.501l-10.825 6.379c-.696.41-1.602.638-2.549.638zm0-33.474c-.545 0-1.058.118-1.406.323l-10.825 6.383c-.737.433-1.406 1.617-1.406 2.488v12.762c0 .866.67 2.05 1.406 2.488l10.825 6.379c.348.205.862.323 1.406.323.545 0 1.058-.118 1.406-.323l10.825-6.383c.737-.433 1.406-1.617 1.406-2.488v-12.757c0-.866-.67-2.05-1.406-2.488l-10.825-6.379c-.348-.21-.862-.328-1.406-.328zM26.024 13.104l-7.205 13.258-3.053-5.777-3.071 5.777-7.187-13.258h4.343l2.803 5.189 3.107-5.832 3.089 5.832 2.821-5.189h4.352z\"></path>\n          </a>\n        </div>\n\n        <label for=\"menu-toggle\" className=\"pointer-cursor lg:hidden block\">\n          <svg\n            className=\"fill-current text-gray-900\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n          >\n            <title>menu</title>\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"></path>\n          </svg>\n        </label>\n        <input className=\"hidden\" type=\"checkbox\" id=\"menu-toggle\" />\n\n        <div className=\"hidden lg:flex lg:items-center lg:w-auto w-full\" id=\"menu\">\n          <nav>\n            <ul className=\"lg:flex items-center justify-between text-base text-gray-700 pt-4 lg:pt-0\">\n              <li>\n                <a\n                  className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-400\"\n                  href=\"/\"\n                >\n                  Home\n                </a>\n              </li>\n              <li>\n                <a\n                  className=\"lg:p-4 py-3 px-0 block border-b-2 border-transparent hover:border-indigo-400\"\n                  href=\"/tweetlist\"\n                >\n                  Tweets\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport Nav from '../Nav/Nav';\n\n\nconst councils = {\n  'Barking and Dagenham': '@lbbdcouncil',\n  Camden: '@CamdenCouncil',\n  Croydon: '@yourcroydon',\n  Hackney: '@hackneycouncil',\n  'Hammersmith and Fulham': '@LBHF',\n  Islington: '@IslingtonBC',\n  Lambeth: '@lambeth_council',\n  Lewisham: '@LewishamCouncil',\n  Westminster: '@CityWestminster',\n};\n\nfunction TweetForm() {\n  const initialState = {\n    type: '',\n    date: '',\n    incident: '',\n    council: '',\n    urgency: '',\n    postcode: '',\n  };\n\n  const [form, setForm] = useState(initialState);\n  const [postcode, setPostcode] = useState([]);\n  const [toggle, setToggle] = useState('true');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`https://api.postcodes.io/postcodes/ ${form.postcode}`)\n      .then((res) => res.json())\n      .then((postcode) => setPostcode(postcode));\n    diffPostcode(postcode);\n  }\n\n  function handleChange(e) {\n    e.preventDefault();\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function addCouncil(postcode) {\n    let newVal = postcode.result;\n    for (let i in newVal) {\n      if (i === 'admin_district') {\n        return newVal[i];\n      }\n    }\n  }\n\n  function refreshPage() {\n    setTimeout(function () {\n      window.location.reload(true);\n    }, 1000);\n  }\n\n  const diffPostcode = (postcode) => {\n    let selection = '';\n    let newVal = postcode.result;\n    for (let i in newVal) {\n      if (i === 'primary_care_trust') {\n        selection = newVal[i];\n      }\n    }\n    for (const [key, value] of Object.entries(councils)) {\n      if (key === selection) {\n        return value;\n      }\n    }\n  };\n\n  let councilhandle = diffPostcode(postcode);\n\n  const toggler = () => {\n    setToggle(false);\n  };\n\n  return (\n    <div>\n      <Nav className=\"\" />\n      <div className='bg-pngop bg-cover h-64'></div>\n      <div className=\"flex justify-center\">\n        <div className=\"m-16\">\n          <form name=\"form\" onSubmit={handleSubmit} className=\"w-full max-w-lg bg-hero\">\n            <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n                  Report Type\n                </label>\n                <input\n                  className=\"appearance-none block w-full text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n                  id=\"grid-first-name\"\n                  name=\"type\"\n                  type=\"text\"\n                  value={form.type}\n                  placeholder=\"name\"\n                  onChange={handleChange}\n                />\n              </div>\n\n              <div className=\"w-full md:w-1/2 px-3\">\n                <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n                  Report Date\n                </label>\n                <input\n                  className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                  name=\"date\"\n                  type=\"date\"\n                  value={form.date}\n                  placeholder=\"*****\"\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex flex-wrap -mx-3 mb-6 mt-12\">\n              <div className=\"w-full px-3\">\n                <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n                  Incident\n                </label>\n                <textarea\n                  className=\"h-32 appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                  name=\"incident\"\n                  type=\"text\"\n                  onChange={handleChange}\n                  value={form.incident}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex flex-wrap -mx-3 mb-2 mt-12\">\n              <div className=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n                <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n                  Postcode\n                </label>\n                <input\n                  className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                  name=\"postcode\"\n                  type=\"text\"\n                  onChange={handleChange}\n                  value={form.postcode}\n                />\n              </div>\n\n              <div className=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n                <label\n                  className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                  htmlFor=\"grid-state\"\n                >\n                  Urgency\n                </label>\n                <div className=\"relative\">\n                  <select\n                    name=\"urgency\"\n                    className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                    id=\"grid-state\"\n                    value={form.urgency}\n                  >\n                    <option></option>\n                    <option>High</option>\n                    <option>Medium</option>\n                    <option>Low</option>\n                  </select>\n                  <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    <svg\n                      className=\"fill-current h-4 w-4\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                    >\n                      <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n                <label\n                  className={`${\n                    toggle ? 'text-gray-200' : 'text-gray-900'\n                  } block uppercase tracking-wide text-gray-200 text-xs font-bold mb-2`}\n                >\n                  Council\n                </label>\n                <input\n                  name=\"council\"\n                  className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                  type=\"text\"\n                  placeholder=\"\"\n                  onChange={handleChange}\n                  value={addCouncil(postcode)}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"flex mt-6\">\n              <div>\n                <button\n                  onClick={toggler}\n                  className={`${\n                    toggle\n                      ? 'bg-blue-500'\n                      : 'bg-blue-500 opacity-25 cursor-not-allowed'\n                  } hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-900 rounded mt-8 mb-0\"`}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </div>\n              <div className=\"ml-auto\">\n                <a\n                  href={`http://twitter.com/intent/tweet?text=${councilhandle} ${form.incident} London via @InspectorRoute`}\n                >\n                  <button\n                    onClick={() => refreshPage()}\n                    className={`${\n                      toggle\n                        ? 'bg-blue-500 opacity-25 cursor-not-allowed'\n                        : 'bg-blue-500 animate-bounce'\n                    } hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-900 rounded mt-8 w-64 right-0`}\n                  >\n                    <FontAwesomeIcon className=\"mr-3\" icon={faTwitter} />\n                    Share on Twitter\n                  </button>\n                </a>\n              </div>\n            </div>\n            {\n              <div className=\"\">\n                {toggle ? (\n                  ''\n                ) : (\n                  <div className=\"bg-gray-200 rounded-md mt-8 border-2 font-bold border-blue-500 p-8 transition\">\n                    We have automatically populated the tweet, we have added the\n                    relevant councils Twitter username based on the postcode you\n                    provided. \n                  </div>\n                )}\n              </div>\n            }\n          </form>\n\n     \n          <div className='bg-pngop h-64'></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TweetForm;\n","import React, { useEffect, useState } from 'react';\nimport TweetList from '../TweetList/TweetList'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nvar dayjs = require('dayjs')\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime)\n\n\n\nfunction Flashcard({tweet}) {\n    const [modalIsOpen,setIsOpen] = useState(false);\n\n    const removeURL = (text) => {\n        return text.replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, '');\n};\n\nconst customStyles = {\n        content : {\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)',\n        \n          width: '700px',\n         \n        }\n      };\n\n    function openModal() {\n    setIsOpen(true);\n  }\n \n  function closeModal(){\n    setIsOpen(false);\n  }\n\n   // <div className='bg-gray-200'>\n    // <div className='flex'>\n    // <div  className='m-auto flex p-4'>\n    // <FontAwesomeIcon className=\"fa-2x self-center mr-4\" icon={faTwitter}/>\n    // <h1 className='text-body text-3xl'>User Twitter Submissions</h1>\n    // </div>\n    // </div>\n\n   \n    \n\n   \nreturn (\n       <div className=\"flex\">\n            <div onClick={openModal} className=\"m-2 bg-gradient-to-r from-blue-400 to-blue-800 bg-opacity-25 border border-gray-900 shadow-lg\">\n              <div>\n                {tweet.entities.media.map((image, index) => {\n                    return (\n                      <img\n                        className=\"w-full object-cover h-64\"\n                        alt=\"goodbye\"\n                        key={index}\n                        src={image.media_url}\n                      />\n                )})}\n                <div className=\"\">\n                  <div className='text-center'>\n                    <img\n                      className=\"rounded-full h-16 w-16 flex items-center justify-center m-auto mt-4\"\n                      alt=\"hello\"\n                      src={tweet.user.profile_image_url}\n                    />\n                  <p className='align-middle mt-4 ml-2 text-gray-200 font-bold'>{`@${tweet.user.name}`}</p>\n                  </div>\n                  <div className='text-center mt-2'>\n                  <FontAwesomeIcon className=\"fa-2x text-gray-100 mt-2\" icon={faTwitter}/>\n                  </div>\n                  <div>\n                  <h3 className=\" text-gray-200 font-bold p-3 h-32 text-center\">{removeURL(tweet.text)}</h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        \n        >\n        <div className='bg-blue-500 flex'>\n         {tweet.entities.media.map((image, index) => {\n                    return (\n                      <img\n                        className=\" object-cover h-64 w-64\"\n                        alt=\"goodbye\"\n                        key={index}\n                        src={image.media_url}\n                      />\n                )})}\n                <div className='mt-3 text-center ml-4'>\n                <div>{tweet.user.name}</div>\n          <div className='mt-10'>{removeURL(tweet.text)}</div>\n          <p className='mt-10'>{`${dayjs(tweet.created_at).fromNow('d')} ago`}</p>\n          </div>\n          </div>\n        </Modal>\n          </div> \n  );  \n }\n\n\n\n\n\nexport default Flashcard\n","import React, { useEffect, useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport Flashcard from '../modal/flashcard';\n// import Modal from 'react-modal';\n// import Flashcard from '../modal/flashcard';\n\nfunction TweetList() {\n    const base_url = 'http://localhost:3001';\n    \n  const removeURL = (text) => {\n    return text.replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, '');\n  };\n\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    fetch(base_url + '/tweets')\n      .then((res) => res.json())\n      .then((tweets) => setTweets(tweets.filter(el => el.entities.media)));\n  }, []);\n\n    return tweets.map((tweet, index) =>  (\n        <div className='w-screen md:w-1/2 xl:w-1/5'>\n    <Flashcard index={index} tweet={tweet}/>\n    </div>\n\n))\n\n}\n\nexport default TweetList;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\n\n// import animationData from '../washer-riding.json';\n\nfunction Banner() {\n\n\n  return (\n    <div className='bg-pngop bg-cover opacity-75'>\n      <div className=\"justify-center items-center text-center bg-blue-700 opacity-90\">\n        <div className=' w-3/3 m-auto self-center'>\n          {/* <div className=\"pt-2 md:pt-2\"> */}\n            {/* <img\n              alt=\"logo\"\n              className=\"md:pt-2 mx-auto\"\n              src={logo}\n            ></img> */}\n            {/* {windowWidth > 500 ?\n            <Lottie options={defaultOptions} height={233} width={400} /> : ''} */}\n          {/* </div> */}\n          <div className=\"sm: mt-0\">\n            <h1 className=\"md: text-white mr-24 ml-24 text-5xl font-body font-bold\">\n              Keeping London Cyclists Safe\n            </h1>\n          </div>\n          <div className=\"p-4\">\n            <h3 className=\" mt-2 text-gray-200 font-body\">\n              A cycling app that directly reports your issues\n            </h3>\n          </div>\n          </div>\n          \n          <div className='m-auto p-2'>\n          <Link to=\"/tweetform\">\n            <button className=\"text-white bg-transparent hover:bg-white text-white-700 font-semibold transition ease-out duration-500 hover:text-white py-2 px-4 border-2 border-whitehover:border-transparent rounded-full w-32 mb-2\">\n              Report\n            </button>\n          </Link>\n          </div>\n          </div>\n      </div>\n\n  );\n}\n\nexport default Banner;\n","import React from 'react';\nimport TweetForm from './TweetForm/TweetForm';\nimport TweetList from './TweetList/TweetList';\nimport Banner from './banner/Banner';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n      \n    <Router>\n      <div className=\"App\">\n          <Route path=\"/\" exact component={Banner}/>\n          <div className='flex flex-wrap'>\n          <Route path=\"/\" exact component={TweetList}/>\n          </div>\n          \n          <Route path=\"/tweetform\" component={TweetForm} />\n         \n       \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}